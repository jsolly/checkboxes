---
import type { FrameworkStats } from "../../types/stats";

interface Props {
	stats: FrameworkStats;
}

const { stats } = Astro.props;

function getColorClass(zScore: number) {
	// Higher z-scores are worse for both metrics
	if (zScore >= 1.5) return "bg-red-500";
	if (zScore >= 0.5) return "bg-orange-500";
	if (zScore >= -0.5) return "bg-yellow-500";
	if (zScore >= -1.5) return "bg-green-400";
	return "bg-green-500";
}
---

<div class="badge-container">
	<div class={`performance-badge ${getColorClass(stats.complexityZScore)}`}>
		<span class="value">Complexity: {stats.complexityScore}%</span>
	</div>
	<div class={`performance-badge ${getColorClass(stats.bundleSizeZScore)}`}>
		<span class="value">JS Bundle: {stats.bundleSize.toFixed(2)}kb</span>
	</div>
</div>

<style>
	.performance-badge {
		color: white;
		border-radius: 9999px;
		padding: 2px 8px;
		font-size: 0.75rem;
		font-weight: 500;
		transition: background-color 0.2s;
	}

	.badge-container {
		position: absolute;
		top: 8px;
		right: 8px;
		z-index: 10;
		display: flex;
		gap: 0.5rem;
	}

	/* Stack vertically on mobile */
	@media (max-width: 640px) {
		.badge-container {
			flex-direction: column;
			gap: 0.25rem; /* Slightly reduce gap for vertical layout */
		}
	}
</style> 